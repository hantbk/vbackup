name: goreleaser

on:
  push:
    tags:
      - "*"  # Run only for tags
  pull_request:

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Set VERSION from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Build web dashboard
        run: make build_web_dashboard

      - name: Update VERSION
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Updating VERSION to $VERSION"
          git checkout main
          sed -i 's/VERSION = ".*"/VERSION = "'$VERSION'"/g' VERSION
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add VERSION
          if ! git diff --cached --quiet; then
            git commit -m "Update VERSION to $VERSION"
            git push origin main
          else
            echo "No changes in VERSION file to commit."
          fi

      - name: Run GoReleaser
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Building and pushing Docker image with VERSION=$VERSION"
          docker buildx build \
            --platform linux/arm64,linux/amd64 \
            -t hantbk/vbackup:${VERSION} \
            -t hantbk/vbackup:latest \
            . --push
